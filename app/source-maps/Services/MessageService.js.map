{"version":3,"sources":["Services/MessageService.ts"],"names":[],"mappings":"AAAA,IAAO,GAAG,CAgBT;AAhBD,WAAO,GAAG;IAAC,IAAA,QAAQ,CAgBlB;IAhBU,WAAA,QAAQ;QACf,YAAY,CAAC;QAIb;YAGI,wBAAY,EAAE;gBACV,MAAM,CAAC;oBACH,UAAU,EAAE;wBACR,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACnC,CAAC;iBACJ,CAAC;YACN,CAAC;YARM,sBAAO,GAAG,CAAC,IAAI,CAAC,CAAC;YAS5B,qBAAC;SAVD,AAUC,IAAA;QAVY,uBAAc,iBAU1B,CAAA;IACL,CAAC,EAhBU,QAAQ,GAAR,YAAQ,KAAR,YAAQ,QAgBlB;AAAD,CAAC,EAhBM,GAAG,KAAH,GAAG,QAgBT;AAED,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC","file":"Services/MessageService.js","sourcesContent":["module App.Services {\r\n    'use strict';\r\n    interface IMessageService {\r\n        getMessage: () => any;\r\n    }\r\n    export class MessageService {\r\n        static $inject = ['$q'];\r\n        public getMessage: () => any;\r\n        constructor($q) {\r\n            return {\r\n                getMessage: function () {\r\n                    return $q.when(\"Hello World!\");\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\napp2.service(\"messageService\", App.Services.MessageService);"],"sourceRoot":"/source/"}